{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_CONDITION_ALPHABET","SORT_CONDITION_LENGTH","sortBy","goods","condition","sortedGoods","sort","good1","good2","localeCompare","length","App","useState","sortCondition","setSortCondition","reverse","setReverse","visibleGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA0B,WAC1BC,EAAwB,SAE9B,SAASC,EAAOC,EAAOC,GACrB,IAAMC,EAAW,YAAOF,GAExB,OAAQC,GACN,KAAKJ,EACH,OAAOK,EAAYC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAChE,KAAKP,EACH,OAAOI,EAAYC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UACjE,QACE,OAAOL,GAIN,IAAMM,EAAM,WACjB,MAA0CC,mBAAS,IAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAeF,EACjBb,EAAOH,EAAiBc,GAAeE,UACvCb,EAAOH,EAAiBc,GAS5B,OACE,sBAAKK,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBACPL,IAAkBb,GAA2B,YAE/CoB,QAAS,kBAAMN,EAAiBd,IALlC,iCAUA,wBACEmB,KAAK,SACLD,UAAS,4BACPL,IAAkBZ,GAAyB,YAE7CmB,QAAS,kBAAMN,EAAiBb,IALlC,4BAUA,wBACEkB,KAAK,SACLD,UAAS,6BACNH,GAAW,YAEdK,QAAS,kBAAMJ,GAAYD,IAL7B,uBAzBsC,KAAlBF,IAAyBE,IAoC3C,wBACEI,KAAK,SACLD,UAAU,4BACVE,QA5CI,WACZN,EAAiB,IACjBE,GAAW,IAuCL,sBAUJ,6BACGC,EAAaI,KAAI,SAAAC,GAAI,OAAK,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC3F3DC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e4eb33ce.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_CONDITION_ALPHABET = 'alphabet';\nconst SORT_CONDITION_LENGTH = 'length';\n\nfunction sortBy(goods, condition) {\n  const sortedGoods = [...goods];\n\n  switch (condition) {\n    case SORT_CONDITION_ALPHABET:\n      return sortedGoods.sort((good1, good2) => good1.localeCompare(good2));\n    case SORT_CONDITION_LENGTH:\n      return sortedGoods.sort((good1, good2) => good1.length - good2.length);\n    default:\n      return sortedGoods;\n  }\n}\n\nexport const App = () => {\n  const [sortCondition, setSortCondition] = useState('');\n  const [reverse, setReverse] = useState(false);\n\n  const visibleGoods = reverse\n    ? sortBy(goodsFromServer, sortCondition).reverse()\n    : sortBy(goodsFromServer, sortCondition);\n\n  const reset = () => {\n    setSortCondition('');\n    setReverse(false);\n  };\n\n  const listIsReset = () => sortCondition === '' && !reverse;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${\n            sortCondition !== SORT_CONDITION_ALPHABET && 'is-light'\n          }`}\n          onClick={() => setSortCondition(SORT_CONDITION_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${\n            sortCondition !== SORT_CONDITION_LENGTH && 'is-light'\n          }`}\n          onClick={() => setSortCondition(SORT_CONDITION_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${\n            !reverse && 'is-light'\n          }`}\n          onClick={() => setReverse(!reverse)}\n        >\n          Reverse\n        </button>\n\n        {!listIsReset() && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (<li data-cy=\"Good\" key={good}>{good}</li>))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}